
# Custom start gcode:

# M190 S0
# M109 S0
#
# SET_PRINT_STATS_INFO TOTAL_LAYER=[total_layer_count]
#
# PRINT_WARMUP BED_TEMP=[first_layer_bed_temperature] MATERIAL=[filament_type] CHAMBER_TEMP=[chamber_temperature] SOAK=1
#
# PRINT_START EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature] MATERIAL=[filament_type] CHAMBER_TEMP=[chamber_temperature] Z_ADUJST=[z_offset]
#
# SET_PRINT_STATS_INFO CURRENT_LAYER=1


[gcode_macro PRINT_WARMUP]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_bed_temp)|float %}
    {% set SOAK = params.SOAK|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_soak)|int %}
    {% set CHAMBER_TEMP = params.CHAMBER|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_chamber_temp)|int %}
    {% set MATERIAL = params.MATERIAL|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_material)|string %}

    {% set verbose = printer["gcode_macro _USER_VARIABLES_OTHER"].verbose %}
    {% set St = printer["gcode_macro _USER_VARIABLES_OTHER"].travel_speed * 60 %}
    {% set Px, Py, Pz = printer["gcode_macro _USER_VARIABLES_OTHER"].purge_bucket_xyz|map('float') %}
    {% set skip_mesh = printer.save_variables.variables.skip_mesh %}
    {% set filter_enabled = printer["gcode_macro _USER_VARIABLES_OTHER"].filter_enabled %}
    {% set filter_speed = printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_filter_speed | float %}

    # Set light intensity while printing
    {% set light_intensity_start_print = printer["gcode_macro _USER_VARIABLES_OTHER"].light_intensity_start_print %}
    {% set light_intensity_printing = printer["gcode_macro _USER_VARIABLES_OTHER"].light_intensity_printing %}

    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}

    LIGHT_ON S={light_intensity_start_print}

    CLEAR_PAUSE
    BED_MESH_CLEAR
    M221 S100
    M220 S100
    G90
    M83

    # 0 ----- HOMING -------------------------------------------
    _STATUS_HOMING
    RESPOND COLOR=success MSG="PRINT_START - 0/6 Homing"
    G28

    # Go to middle of bed
    G0 X{max_x|int / 2} Y150F{St}

    # 0.1 ----- MATERIAL PARAMETERS --------------------------------
    # Material dependant parameters like PA, firmware retraction, Z_offset, etc...
    RESPOND COLOR=success MSG="Material: {MATERIAL}"
    CONFIGURE_MATERIAL MATERIAL={MATERIAL}

    # 2 ----- HEATING -------------------------------------------
    _STATUS_HEATING
    RESPOND COLOR=success MSG="PRINT_START 1/7 - Heating"
    {% if (SOAK > 0) %} #and (printer.heater_bed.target < (BED_TEMP - 8)) %}
        # If the machine is equiped by a chamber temperature sensor and a recirculating filter (check is automatic under the hood),
        # then we look if a specific chamber temperature is needed and we power on the recirculating filter to spread the heat
        # {% if CHAMBER_TEMP > 0 %}
        #     START_FILTER SPEED={filter_speed}
        # {% endif %}
        # Put the bed temperature target and wait for the soak
        HEAT_SOAK TARGET={BED_TEMP} SOAK_TEMP={CHAMBER_TEMP}

        # Reconfigure material to reset the fans from the HEAT_SOAK
        CONFIGURE_MATERIAL MATERIAL={MATERIAL}
    {% else %}
        # Only heat the bed to the target and continue
        M190 s{BED_TEMP}
    {% endif %}

[gcode_macro PRINT_START]
gcode:
# Parameters
    # Parameters

    # Extruder and bed temperatures
    {% set BED_TYPE = params.BED_TYPE|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_bed_type)|string %}
    {% set BED_TEMP = params.BED_TEMP|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_bed_temp)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_extruder_temp)|float %}

    # Optional Z adjustement from the slicer profile
    {% set Z_ADJUST = params.Z_ADJUST|default(0)|float %}

    # Heatsoak time of the bed in minutes and chamber temperature wanted
    {% set SOAK = params.SOAK|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_soak)|int %}
    {% set CHAMBER_TEMP = params.CHAMBER|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_chamber_temp)|int %}

    # Default material type to 'PLA'
    {% set MATERIAL = params.MATERIAL|default(printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_material)|string %}

    # Get bounding box of the first layer
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}

    # End parameters

    # Set vars
    {% set verbose = printer["gcode_macro _USER_VARIABLES_OTHER"].verbose %}
    {% set St = printer["gcode_macro _USER_VARIABLES_OTHER"].travel_speed * 60 %}
    {% set Px, Py, Pz = printer["gcode_macro _USER_VARIABLES_OTHER"].purge_bucket_xyz|map('float') %}
    {% set skip_mesh = printer.save_variables.variables.skip_mesh %}
    {% set filter_enabled = printer["gcode_macro _USER_VARIABLES_OTHER"].filter_enabled %}
    {% set filter_speed = printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_filter_speed | float %}

    # Set light intensity while printing
    {% set light_intensity_start_print = printer["gcode_macro _USER_VARIABLES_OTHER"].light_intensity_start_print %}
    {% set light_intensity_printing = printer["gcode_macro _USER_VARIABLES_OTHER"].light_intensity_printing %}

    {% set chamber_sensor_enabled = printer["gcode_macro _USER_VARIABLES_OTHER"].chamber_temperature_sensor_enabled %}
    {% set zcalib_plugin_enabled = printer["gcode_macro _USER_VARIABLES_OTHER"].zcalib_plugin_enabled %}

    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}

    RESPOND COLOR=success MSG="PRINT_ START 2/7 - Warming up extruder"
    # Heat up hot end for probing
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
    M109 S150
    M190 S{BED_TEMP}

    G28

    # 3 ----- QUAD GANTRY LEVELING -----------------------------
    {% if printer.quad_gantry_level.applied|lower == 'false' %}
      _STATUS_LEVELING
      RESPOND COLOR=success MSG="PRINT_ START 3/7 - QGL"
      QUAD_GANTRY_LEVEL
      G28 Z
    {% else %}
      RESPOND COLOR=success MSG="PRINT_START 3/7 - QGL already applied"
    {% endif %}


    # 4 ----- BED MESH -------------------------------------------
    # For the bed mesh, there is two possibilities depending if we use the auto z calibration plugin:
    #  - If yes, then the mesh should already be computed by a call to COMPUTE_MESH_PARAMETERS in section 6
    #    because we already needed to use the mesh_center point as a parameter to the z calibration command
    #  - If no, then we need to use the SIZE parameter to the ADAPTIVE_BED_MESH call to do all at once now

    RESPOND COLOR=success MSG="PRINT_START 4/7 - Meshing"
    _STATUS_MESHING
    BED_MESH_CALIBRATE

    RESPOND COLOR=success MSG="PRINT_START 4.1/7 - Touch Z"
    CARTOGRAPHER_TOUCH
    CONFIGURE_BED BED_TYPE="{BED_TYPE}"
    SET_GCODE_OFFSET Z_ADJUST={Z_ADJUST}

    G90
    G1 Z20 F{St} # move up for heating

    # 5 ----- EXTRUDER HEATING ---------------------------------
    # Heat the nozzle to print temperature ontop of the purge bucket
    # and wait 30s to let the nozzle dilate and stabilize
    _STATUS_HEATING

    {% if verbose %}
        RESPOND COLOR=success MSG="STATUS_PRINT 5/7 - Heating up extruder for purge"
    {% endif %}
    M109 S{EXTRUDER_TEMP}
    G4 P{15000 * 0.5} #60000 # Dwell for 7500ms
    {% if verbose %}
        RESPOND MSG="Extruder temperature OK"
    {% endif %}

    G1 X20 Y20 Z10 F{St} # move to corner

    # 6 ----- PRINT !!! -------------------------------------------
    # Do a prime line, lower the lights and start the print
    _STATUS_PRINTING
    {% if verbose %}
        RESPOND COLOR=success MSG="STATUS_PRINT 6/7 - Running prime line"
    {% endif %}

    LINE_PURGE

    LIGHT_ON S={light_intensity_printing}

    {% if verbose %}
        RESPOND COLOR=success MSG="STATUS_PRINT 7/7 - PRINTING!"
    {% endif %}

    G92 E0.0
    G1 Z0 F7800

    M117 Printing!
    CLEAR_DISPLAY DELAY=2

    SET_PRINT_STATS_INFO CURRENT_LAYER=1
    set_logo_leds_off


[gcode_macro PRIME_LINE]
gcode:
    # Set vars
    {% set St = printer["gcode_macro _USER_VARIABLES_OTHER"].travel_speed * 60 %}
    {% set Sz = printer["gcode_macro _USER_VARIABLES_OTHER"].z_drop_speed * 60 %}
    {% set retract_dist = printer["gcode_macro _USER_VARIABLES_OTHER"].purge_retract_dist | default(0.1) | float %}
    {% set prime_line_x, prime_line_y = printer["gcode_macro _USER_VARIABLES_OTHER"].prime_line_xy|map('float') %}

    G91 # Relative Positioning
    M83 # Relative Extrusion
    G1 Z5 F{Sz}

    ; Starting position
    G90
    G1 X{prime_line_x} Y{prime_line_y} F{St}
    G1 Z0.3 F{Sz|int / 2}

    ; Add pressure in the nozzle
    G92 E0
    G1 E18 F300

    ; Prime line
    G92 E0
    G1 Y{prime_line_y + 80} E10 F2500
    G92 E0
    G1 Y{prime_line_y + 130} E5 F1500

    ; Retract and Z-hop
    G92 E0
    G1 Z4.0 E-{retract_dist} F{Sz}
    G92 E0
    G1 Z5 F{Sz}
