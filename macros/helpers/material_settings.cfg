
[gcode_macro CONFIGURE_MATERIAL]
description: Setup the printer for a specific material

variable_chamber_pla: 30.0
variable_chamber_abs: 35.0

gcode:

  {% set filter_enabled = printer["gcode_macro _USER_VARIABLES_OTHER"].filter_enabled %}
  {% set filter_speed = printer["gcode_macro _USER_VARIABLES_OTHER"].print_default_filter_speed | float %}

  {% set MATERIAL = params.MATERIAL | default("PLA") | string %}

  # Set some default values in case the material is not recognized
  SET_PRESSURE_ADVANCE ADVANCE=0.045 #0.0525
  SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30

  {% if MATERIAL == "PLA" %}
    SET_PRESSURE_ADVANCE ADVANCE=0.045 #0.0525
    SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=set_soak_temp VALUE={chamber_pla}
    STOP_FILTER
  {% elif MATERIAL == "PLA+" %}
    SET_PRESSURE_ADVANCE ADVANCE=0.03 #0.0525
    SET_RETRACTION RETRACT_LENGTH=0.3 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=set_soak_temp VALUE={chamber_pla}
    STOP_FILTER
  {% elif MATERIAL == "PET" %}
  #    SET_PRESSURE_ADVANCE ADVANCE=0.0650
  #    SET_GCODE_OFFSET Z_ADJUST=0.010 MOVE=1
  #   SET_RETRACTION RETRACT_LENGTH=1.4 RETRACT_SPEED=30 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=20
  {% elif MATERIAL == "ABS" %}
    SET_PRESSURE_ADVANCE ADVANCE=0.015 #0.034 #0.023 #0.027
    SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=30 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=set_soak_temp VALUE={chamber_abs}
    {% if filter_enabled %} # if a filter is available, we start it for ABS
      START_FILTER SPEED={filter_speed}
    {% endif %}
  {% elif MATERIAL == "ASA" %}
    SET_PRESSURE_ADVANCE ADVANCE=0.023 #0.027
    SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=30 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=set_soak_temp VALUE={chamber_abs}
    {% if filter_enabled %} # if a filter is available, we start it for ASA
      START_FILTER SPEED={filter_speed}
    {% endif %}
  {% endif %}
